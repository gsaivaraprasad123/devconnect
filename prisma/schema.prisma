// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  username  String     @unique
  email     String     @unique
  password  String
  bio       String?

  // Relations
  posts     Post[]     @relation("UserPosts")
  bookmarks Bookmark[]
  comments  Comment[]

  // Timestamps
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Post {
  id        String     @id @default(uuid())
  title     String
  content   String
  likes     Int        @default(0)
  authorId  String

  // Relations
  author    User       @relation("UserPosts", fields: [authorId], references: [id])
  bookmarks Bookmark[]
  comments  Comment[]

  // Timestamps
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Bookmark {
  id        Int        @id @default(autoincrement())
  userId    String
  postId    String

  // Relations
  user      User       @relation(fields: [userId], references: [id])
  post      Post       @relation(fields: [postId], references: [id])

  createdAt DateTime   @default(now())

  @@unique([userId, postId]) // Prevent duplicate bookmarks
}

model Comment {
  id        String     @id @default(cuid())
  content   String
  userId    String
  postId    String

  // Relations
  user      User       @relation(fields: [userId], references: [id])
  post      Post       @relation(fields: [postId], references: [id])

  createdAt DateTime   @default(now())
}
